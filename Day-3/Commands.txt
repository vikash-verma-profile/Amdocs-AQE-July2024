CurSOR

DECLARE
P_STUDENT_NAME STUDENT_MASTERS.STUDENT_NAME%TYPE;
P_STUDENT_CODE STUDENT_MASTERS.STUDENT_CODE%TYPE;
CURSOR c_Student is SELECT STUDENT_NAME,STUDENT_CODE FROM STUDENT_MASTERS; -- DEclaration
BEGIN
OPEN c_Student;
LOOP
FETCH c_Student into P_STUDENT_NAME,P_STUDENT_CODE;
    EXIT WHEN (c_Student%NOTFOUND);
     DBMS_OUTPUT.PUT_LINE(P_STUDENT_NAME || ' ' ||P_STUDENT_CODE);
END LOOP;

CLOSE c_Student;
END;


==========

TRIGGER

create or replace TRIGGER T_STUDENT
BEFORE
 INSERT 
 ON STUDENT_MASTERS
 BEGIN
    DBMS_OUTPUT.PUT_LINE('Inserting');
 END;
 
 select  * from STUDENT_MASTERS
 insert into STUDENT_MASTERS values('10023','Rakhi SHarma',30,'24-07-2024','Gurgaon')
 
 
 
 PROCEDURE
 
 var r refcursor;

exec GETSTUDENTDETAILS ('1001',:r);

print r;


create or replace PROCEDURE GETSTUDENTDETAILS(P_STUDENT_CODE IN NUMBER,OUTPUT OUT SYS_REFCURSOR) 
AS 
BEGIN
OPEN OUTPUT FOR select  * from GET_STUDENT_DETAILS where STUDENT_CODE=P_STUDENT_CODE;
END;


============

VIEW

select  SM.STUDENT_CODE,SM.STUDENT_NAME, SMR.STUDENT_YEAR,SMR.SUBJECT1,SMR.SUBJECT2,SMR.SUBJECT3
from STUDENT_MASTERS SM join STUDENT_MARKS SMR on SM.STUDENT_CODE=SMR.STUDENT_CODE;

========================

FUNCTION

create or replace FUNCTION GET_FULLNAME(ID NUMBER) 
RETURN VARCHAR2
IS
    OUTPUT VARCHAR2(200);
BEGIN
  select CONCAT(FirstName,CONCAT(' ',LastName)) as FullName  INTO OUTPUT  from employee WHERE EMPID=ID;
RETURN OUTPUT;

END;

select GET_FULLNAME(1) as FULLNAME from dual